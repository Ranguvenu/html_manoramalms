{"version":3,"file":"onlineexamsAjaxform.min.js","sources":["../src/onlineexamsAjaxform.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_onlineexams/onlineexamsAjaxform\n * @class      courseAjaxform\n * @package    local_onlineexams\n * @copyright  2018 Sreenivas\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later \n */\ndefine([ 'jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui', 'core/templates'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y, Templates) {\n\n    /**\n     * Constructor\n     *\n     * @param {object} args\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var courseAjaxform = function(args) {\n        this.contextid = args.contextid ? args.contextid : 1;\n        this.args = args;\n        this.init(args);\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    courseAjaxform.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    courseAjaxform.prototype.contextid = -1;\n\n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    courseAjaxform.prototype.init = function(args) {\n\n        // Fetch the title string.\n        var self = this;\n         if (args.courseid) {           \n           var head =  {key:'editonlineexam', component:'local_onlineexams'};    \n        }else{\n           var head = {key:'createonlineexam', component:'local_onlineexams'};\n        }\n        console.log(args);\n        customstrings = Str.get_strings([head, {\n                key: 'yes',\n                component: 'customfield'\n            },\n            {\n                key: 'no',\n                component: 'customfield'\n            },\n            {\n                key: 'saveandcontinue',\n                component: 'local_onlineexams'\n            },\n            {\n                key: 'cancel',\n                component: 'moodle'\n            }]);\n        return customstrings.then(function(strings) {\n            // Create the modal.\n            return ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: strings[0],\n                body: this.getBody(),\n                footer: this.getFooter(strings),\n            });\n        }.bind(this)).then(function(modal) {\n            // Keep a reference to the modal.\n            this.modal = modal;\n            \n           \n            if (args.callback !='custom_selfcompletion_form') {\n                // Forms are big, we want a big modal.\n                this.modal.setLarge();\n\n                this.modal.getRoot().addClass('openLMStransition local_courses');\n\n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 1000);\n                    this.modal.setBody('');\n                }.bind(this));\n            }\n\n            // // We want to hide the submit buttons every time it is opened.\n            // this.modal.getRoot().on(ModalEvents.shown, function() {\n            //     this.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n            // }.bind(this));\n\n            // We catch the modal save event, and use it to submit the form inside the modal.\n            // Triggering a form submission will give JS validation scripts a chance to check for errors.\n            // this.modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\n         \n            \n                this.modal.footer.find('[data-action=\"save\"]').on('click', this.submitForm.bind(this));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                    modal.setBody('');\n                    modal.hide();\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 1000);\n                    // if (args.form_status !== 0 ) {\n                        window.location.reload();\n                    // }\n                });\n                \n                this.modal.getRoot().find('[data-action=\"hide\"]').on('click', function() {\n                    modal.hide();\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 1000);\n                     //modal.destroy();\n                    // if (args.form_status !== 0 ) {\n                        window.location.reload();\n                    // }\n                    \n                });\n                if(self.args.callback == 'custom_onlineexams_form'){\n                    $(document).on('click', '.custom_onlineexam_form_redirect', function(){\n                        var instanceid = $(\"#onlineexamid\").val();\n                        if(instanceid > 0){\n                            self.args.form_status = $(this).data('value');\n                            var data = self.getBody();\n                            data.then(function(html, js) {\n                                if (html === false) {\n                                  // window.location.reload();\n                                    self.handleFormSubmissionResponse(args);\n                                }\n                            });\n                            modal.setBody(data);\n                            // if(self.args.form_status==0){\n                            //     $('[data-action=\"skip\"]').css('display', 'none');\n                            //     $('[data-action=\"previous\"]').css('display', 'none');\n                            // }else{\n                            //     $('[data-action=\"skip\"]').css('display', 'block');\n                            //     $('[data-action=\"previous\"]').css('display', 'block');\n                            // }\n                        }\n                    });\n                }\n            \n\n            this.modal.getRoot().on('submit', 'form', function(form) {\n                self.submitFormAjax(form, self.args);\n            });\n            this.modal.show();\n            this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n            return this.modal;\n        }.bind(this));\n    };\n\n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    courseAjaxform.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // Get the content of the modal.\n        this.args.jsonformdata = JSON.stringify(formdata);\n        return Fragment.loadFragment(this.args.component, this.args.callback, this.contextid, this.args);\n    };\n    /**\n     * @method getFooter\n     * @private\n     * @return {Promise}\n     */\n    courseAjaxform.prototype.getFooter = function(customstrings) {\n      \n                var footer = '';\n               \n              if(this.args.viewtype!='userview'){\n                    footer+= '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">'+customstrings[3]+'</button>&nbsp;';\n                    // if(this.args.form_status == 0) {\n                    //     $style = 'style=\"display:none;\"';\n                    //     $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"skip\" ' + $style + '>Skip</button>&nbsp;';\n                    // }\n                    footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+customstrings[4]+'</button>';\n                }\n            return footer;\n        // }.bind(this));\n    };\n     /**\n     * @method getFooter\n     * @private\n     * @return {Promise}\n     */\n    courseAjaxform.prototype.getcontentFooter = function() {\n        return Str.get_strings([{\n                key: 'cancel'\n            }]).then(function(s) {\n            $footer = '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+s[0]+'</button>';\n            return $footer;\n        }.bind(this));\n    };\n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    courseAjaxform.prototype.handleFormSubmissionResponse = function(args) {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n\n        if (args.userid) {\n             this.modal.hide();\n        }else{\n            return Str.get_strings([{\n                key: 'onlineexamoverview',\n                component: 'local_onlineexams'\n            }]).then(function(s) {\n                \n                // This will be the context for our template. So {{name}} in the template will resolve to \"Tweety bird\".\n                var context = { courseid: args.courseid, configpath: M.cfg.wwwroot, enrolid: args.enrolid, contextid:args.contextid};\n\n                var modalPromise = ModalFactory.create({\n                    type: ModalFactory.types.DEFAULT,\n                    body: Templates.render('local_onlineexams/onlineexams', context),\n                    footer: this.getcontentFooter(),\n                });\n                $.when(modalPromise).then(function(modal) {\n                    modal.setTitle(s[0]);\n\n                    // Forms are big, we want a big modal.\n                    modal.setLarge();\n\n                    modal.getRoot().addClass('openLMStransition');\n                    modal.show();\n                    modal.getRoot().animate({\"right\":\"0%\"}, 500);\n                    // modal.getRoot().on(ModalEvents.hidden, function() {\n                    //     modal.hide();\n                    // });\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        modal.destroy();\n                    }.bind(this));\n                    modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                        setTimeout(function(){\n                            window.location.reload();\n                        }, 600);\n                    });\n                    modal.getRoot().find('[data-action=\"hide\"]').on('click', function() {\n                        modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                        setTimeout(function(){\n                            window.location.reload();\n                        }, 200);\n                    });\n                    return modal;\n                }).fail(Notification.exception);\n                $('#coursesearch').dataTable().destroy();\n            }.bind(this));\n        }\n        // Classroom.Datatable();\n    };\n\n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    courseAjaxform.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    courseAjaxform.prototype.submitFormAjax = function(e, args) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n        var self = this;\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n\n        if (args.userid) {\n             var methodname = args.plugintype + '_' + args.pluginname + '_submit_evidence_onlineexams_form';\n        }else{\n            var methodname = args.plugintype + '_' + args.pluginname + '_submit_create_onlineexams_form';\n        }\n        // Now we can continue...\n        var params = {};\n        params.contextid = this.contextid;\n        params.jsonformdata = JSON.stringify(formData);\n        params.form_status = args.form_status;\n        // params.id = args.id;\n\n        var promise = Ajax.call([{\n            methodname: methodname,\n            args: params\n        }]);\n        promise[0].done(function(resp){\n            self.args.courseid = resp.courseid;\n            self.args.enrolid = resp.enrolid;\n            // if(resp.form_status !== -1 && resp.form_status !== false) {\n            //     self.args.form_status = resp.form_status;\n            //     self.handleFormSubmissionFailure();\n            // } else {\n                self.handleFormSubmissionResponse(self.args);\n            // }\n            // if(args.form_status > 0) {\n                // $('[data-action=\"skip\"]').css('display', 'inline-block');\n            // }\n        }).fail(function(){\n            self.handleFormSubmissionFailure(formData);\n        });\n\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    courseAjaxform.prototype.submitForm = function(e) {\n        e.preventDefault();\n        this.modal.getRoot().find('form').submit();\n    };\n\n    return /** @alias module:core_group/courseAjaxform */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n            return new courseAjaxform(args);\n        },\n        deleteConfirm: function(args){\n            return Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'deleteconfirm',\n                component: 'local_onlineexams',\n                param : args\n            },\n            {\n                key: 'deleteallconfirm',\n                component: 'local_onlineexams'\n            },\n            {\n                key: 'delete'\n            },\n            {\n                key: 'yes',\n                component: 'customfield'\n            },\n            {\n                key: 'no',\n                component: 'customfield'\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.DEFAULT,\n                    body: s[1],\n                    footer: '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">'+s[4]+'</button>&nbsp;' +\n            '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+s[5]+'</button>'\n                }).done(function(modal) {\n                    this.modal = modal;\n                    \n                    modal.getRoot().find('[data-action=\"save\"]').on('click', function() {\n                        args.confirm = true;\n                        var promise = Ajax.call([{\n                            methodname: 'local_onlineexams_' + args.action,\n                            args: args\n                        }]);\n                        promise[0].done(function() {\n                            window.location.href = window.location.href;\n                        }).fail(function(ex) {\n                            // do something with the exception\n                             console.log(ex);\n                        });\n                    }.bind(this));\n                    modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.setBody('');\n                        modal.hide();\n                    });\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n        inactiveConfirm: function(args){\n            return Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'disableconfirm',\n                component: 'local_onlineexams',\n                param : args\n            },\n            {\n                key: 'disableallconfirm',\n                component: 'local_onlineexams'\n            },\n            {\n                key: 'inactive'\n            },\n            {\n                key: 'yes',\n                component: 'customfield'\n            },\n            {\n                key: 'no',\n                component: 'customfield'\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.DEFAULT,\n                    body: s[1],\n                    footer: '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">'+s[4]+'</button>&nbsp;' +\n                            '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+s[5]+'</button>'\n                }).done(function(modal) {\n                    this.modal = modal;\n                    \n                    modal.getRoot().find('[data-action=\"save\"]').on('click', function() {\n                        console.log(args);\n                        args.confirm = true;\n                        var promise = Ajax.call([{\n                            methodname: 'local_onlineexams_' + args.action,\n                            args: args\n                        }]);\n                        promise[0].done(function() {\n                            window.location.href = window.location.href;\n                        }).fail(function(ex) {\n                            // do something with the exception\n                             console.log(ex);\n                        });\n                    }.bind(this));\n                    modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.setBody('');\n                        modal.hide();\n                    });\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n        getCatlist: function() {\n        \n        },\n        load: function () {}\n    };\n});\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","Templates","courseAjaxform","args","contextid","init","prototype","modal","self","this","courseid","head","key","component","console","log","customstrings","get_strings","then","strings","create","type","types","DEFAULT","title","body","getBody","footer","getFooter","bind","callback","setLarge","getRoot","addClass","on","hidden","animate","setTimeout","destroy","setBody","find","submitForm","hide","window","location","reload","document","val","form_status","data","html","js","handleFormSubmissionResponse","form","submitFormAjax","show","formdata","jsonformdata","JSON","stringify","loadFragment","viewtype","getcontentFooter","s","$footer","use","M","core_formchangechecker","reset_form_dirty_state","userid","context","configpath","cfg","wwwroot","enrolid","modalPromise","render","when","setTitle","fail","Notification","exception","dataTable","handleFormSubmissionFailure","e","preventDefault","formData","serialize","methodname","plugintype","pluginname","params","call","done","resp","submit","deleteConfirm","param","confirm","action","href","ex","inactiveConfirm","getCatlist","load"],"mappings":"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"}